

# This file was *autogenerated* from the file try.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_4 = Integer(4); _sage_const_30 = Integer(30); _sage_const_2 = Integer(2)
from itertools import permutations
import matplotlib.pyplot as plt
from scipy.spatial import ConvexHull

def get_lineup_polytope(p):

    sum = _sage_const_0 
    for i in range(_sage_const_1 , len(p) + _sage_const_1 ):
        sum += i
    
    nb_vertices = len(p)

    P = Polyhedron(vertices=p)

    plot_obj = P.plot(fill='lightblue', color='blue')
    plot_obj.save(f'p{nb_vertices}.png')


    w = list(range(_sage_const_1 , nb_vertices + _sage_const_1 ))

    vertices = []
    vert = [_sage_const_0 ,_sage_const_0 ]

    for perm in permutations(w):
        current_vertex = [_sage_const_0 ,_sage_const_0 ]
        for i in range(_sage_const_4 ):
            current_vertex[_sage_const_0 ] += perm[i]*p[i][_sage_const_0 ]
            current_vertex[_sage_const_1 ] += perm[i]*p[i][_sage_const_1 ]

        vert = [_sage_const_1 /sum * current_vertex[_sage_const_0 ], _sage_const_1 /sum * current_vertex[_sage_const_1 ]]
        vertices.append(vert)

    P = Polyhedron(vertices=vertices)

    plot_obj = P.plot(fill='lightblue', color='blue') + list_plot(vertices, color='red', size=_sage_const_30 )
    plot_obj.save(f'{nb_vertices}-lineup_polytope.png')


def get_lineup_polytope_3d(p):
    from itertools import permutations

    nb_vertices = len(p)
    w = list(range(_sage_const_1 , nb_vertices + _sage_const_1 ))

    vertices = []
    for perm in permutations(w):
        current_vertex = [_sage_const_0 , _sage_const_0 , _sage_const_0 ]
        for i in range(nb_vertices):
            current_vertex[_sage_const_0 ] += perm[i] * p[i][_sage_const_0 ]
            current_vertex[_sage_const_1 ] += perm[i] * p[i][_sage_const_1 ]
            current_vertex[_sage_const_2 ] += perm[i] * p[i][_sage_const_2 ]
        vert = [_sage_const_1 /nb_vertices * current_vertex[_sage_const_0 ],
                _sage_const_1 /nb_vertices * current_vertex[_sage_const_1 ],
                _sage_const_1 /nb_vertices * current_vertex[_sage_const_2 ]]
        vertices.append(vert)

    P = Polyhedron(vertices=vertices)
    P.show(view='threejs')

# p4 = [[1,3],[2,1],[4,2],[3,4]]
# get_lineup_polytope(p4)

# p6 = [[0,1], [0,2], [1,0], [1,3], [2,1], [2,2]]
# get_lineup_polytope(p6)

prisme = [[_sage_const_0 , _sage_const_0 , _sage_const_0 ], [_sage_const_1 ,_sage_const_0 ,_sage_const_0 ], [_sage_const_0 ,_sage_const_1 ,_sage_const_0 ], [_sage_const_0 ,_sage_const_0 ,_sage_const_1 ], [_sage_const_1 ,_sage_const_0 ,_sage_const_1 ], [_sage_const_0 ,_sage_const_1 ,_sage_const_1 ]]
get_lineup_polytope_3d(prisme)


